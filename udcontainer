#!/usr/bin/bash
################################################################################
#                              udcontainer                                     #
#                                                                              #
# Script made with the intention of studing a bit of bash script programming.  #
#                                                                              #
# The objective for this script is making easier for me to start my docker     #
# containers.                                                                  #
#                                                                              #
# Change History                                                               #
# 11/11/2019  Arthur Hassan    Creation of this scirpt.                        #
#                                                                              #
################################################################################
################################################################################
################################################################################
#                                                                              #
#  Copyright (C) 2021 Arthur Hassan                                            #
#                                                                              #
#  This program is free software; you can redistribute it and/or modify        #
#  it under the terms of the GNU General Public License as published by        #
#  the Free Software Foundation; either version 2 of the License, or           #
#  (at your option) any later version.                                         #
#                                                                              #
#  This program is distributed in the hope that it will be useful,             #
#  but WITHOUT ANY WARRANTY; without even the implied warranty of              #
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
#  GNU General Public License for more details.                                #
#                                                                              #
#  You should have received a copy of the GNU General Public License           #
#  along with this program; if not, write to the Free Software                 #
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA   #
#                                                                              #
################################################################################
################################################################################
################################################################################

################################################################################
# Help                                                                         #
################################################################################
function help()
{
   # Display Help
   echo "Script made for start/stop the docker containers for you"
   echo 
   echo "Keep in mind, if you want to use the -e option you have to"
   echo "make sure your containers names follows this pattern: [\"name\"-\"environment\"]"
   echo "\"name\" represents the container name, and \"environment\" the values [local/dev/test/prod]"
   echo "or whatever type of pattern you have."
   echo "Name examples: postgres-dev | mysql-prod | mongo-test"
   echo
   echo "Syntax: startcnt -[s|h|n|e]"
   echo "options:"
   echo "   -s     Boolean value for start or stop the database"
   echo "   -h     Print this Help."
   echo "   -n     The name of the container you are trying to run"
   echo "   -e     The environment of the container."
   echo "   -l     List of containers you can start"
   echo "   -l     List of running containers"
   echo
}
################################################################################
################################################################################

################################################################################
# Functions                                                                    #
################################################################################
function check_dependencies()
{
    echo -n "Checking dependencies... "
    for name in docker
    do
    [[ $(which $name 2>/dev/null) ]] || { echo -en "\n$name needs to be installed. Use 'sudo apt-get install $name'";deps=1; }
    done
    [[ $deps -ne 1 ]] && echo "OK" || { echo -en "\nInstall the above and rerun this script\n";exit 1; }
}

function load_list_of_containers()
{
    containers_list=$(docker container ls -a --format 'table {{.Names}}');
}

function list_containers()
{
    echo 
    command docker container ls -a --format 'table {{.Names}}\t{{.Image}}'
    echo 
}

function list_running_containers()
{
    echo 
    command docker ps --format 'table {{.ID}}\t{{.Names}}\t{{.Image}}\t{{.State}}-{{.Status}}\t{{.CreatedAt}}'
    echo 
}

function validate_container_name()
{
    read -ra names -d '' <<<"$containers_list"
    for name in "${names[@]}"
    do
        if [ "$name" == "$1" ]; 
        then
            is_valid="true"
            break
        else
            is_valid="false"
        fi
    done

    echo "$is_valid"
    unset $is_valid
}

function select_valid_container() {
    while [[ true ]]; do
        echo "Inform a container name: "
        list_containers
        read -r container_name
        if [ "$( validate_container_name ${container_name} )" == "true" ]; 
        then
            break 
        else
            echo
            echo "Invalid container name informed: ${container_name}"
            echo
        fi
    done
}

function check_container_status()
{
    local is_running=$( docker container inspect -f '{{.State.Status}}' $1 )

    if [[ "$is_running" == "running" ]]; 
    then
        echo "stop"
    else
        echo "start"
    fi
}
################################################################################
################################################################################


################################################################################
# Main program                                                                 #
################################################################################

check_dependencies

while getopts "s:n:e:rlh" option; do
    case "$option" in
        h)
            help
            exit;;
        l) 
            list_containers
            exit;;
        r) 
            list_running_containers
            exit;;
        s) 
            start=${OPTARG};; 
        n) 
            container_name=${OPTARG};; 
        e) 
            environment=${OPTARG};; 
        \?)
            echo "Error: Invalid option"
            exit;;
    esac
done

null_name=$( [ -z ${container_name} ] && echo "True" || echo "False" )
null_environment=$( [ -z ${environment} ] && echo "True" || echo "False" )
null_start=$( [ -z ${start} ] && echo "True" || echo "False" )
load_list_of_containers

if [ "$null_environment" == "False" ]; 
then
    container_name=$container_name-$environment 
fi

if [ "$null_name" == "true" ];
then
    select_valid_container
else
    if [ "$( validate_container_name ${container_name} )" == "false" ]; 
    then
        select_valid_container
    fi
fi

if [ "$null_start" == "True" ];
then
   start_container="$(check_container_status ${container_name})"
fi

echo "Running command: docker $start_container ${container_name}"
command docker $start_container ${container_name}